# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: Cleanup workflows
description: 'Removes runs from all workflows except ci.yml, cd.yml and the other workflows specified in the exluded list'
inputs:
  PAT_TOKEN:
    description: 'Personal access token used for authenticating against the github REST Api'
    required: true
  REPOSITORY:
    description: 'Repository the cleanup job is run towards. {owner}/{repository}'
    required: true

runs:
  using: composite
  steps:
    - name: Setup job
      shell: bash
      run: |
        mkdir ${{ github.workspace }}/remote

    - uses: actions/checkout@v3
      with:
        repository: ${{ inputs.REPOSITORY }}
        ref: 'main'
        token: ${{ inputs.PAT_TOKEN }}
        path: ${{ github.workspace }}/remote

    # We only operate on files not in main. So we load all filenames into a comma separated string, to pass to the job
    # The nullglob option causes the array to be empty if there are no matches.
    - name: Get excluded workflows
      id: get-excluded-workflows
      shell: bash
      run: |
        shopt -s nullglob

        # doing cd into directory, to only get filenames and complete filepath
        cd ${{ github.workspace }}/remote/.github/workflows
        workflow_files_array=(*.yml)

        # Reading files into comma separated string
        workflow_files=""
        for file in "${workflow_files_array[@]}"; do
          if [ -z "$workflow_files" ]
          then
            workflow_files="${file}"
          else
            workflow_files="${workflow_files},${file}"
          fi
        done

        echo "::set-output name=EXCLUDED_WORKFLOWS::$workflow_files"

    - name: Install npm packages
      shell: bash
      run: |
        npm install @actions/core
        npm install @actions/github

    - name: Cleanup
      shell: bash
      run: |
        node ${{ github.action_path }}/index.js ${{ inputs.PAT_TOKEN }} ${{ inputs.REPOSITORY }} ${{ steps.get-excluded-workflows.outputs.EXCLUDED_WORKFLOWS }}
